import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tholithemba
 */
public class Login extends javax.swing.JFrame {

    private String login_password;
    private String user_practice_number;
    private String name;
    private String lastname;
    private String fullname;
    
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_login = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtf_user_id = new javax.swing.JTextField();
        txtf_login_password = new javax.swing.JPasswordField();
        warn_message = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comb_usrtype = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(115, 101, 152));
        jPanel1.setForeground(java.awt.Color.white);

        btn_login.setBackground(java.awt.Color.blue);
        btn_login.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btn_login.setForeground(java.awt.Color.white);
        btn_login.setText("Login");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Username:");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Password:");

        warn_message.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        warn_message.setForeground(java.awt.Color.red);
        warn_message.setText(".");

        jLabel3.setForeground(java.awt.Color.red);
        jLabel3.setText("       new user?  sign up");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        comb_usrtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "usertype", "Doctor", "Patient", "Receptionist" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comb_usrtype, 0, 184, Short.MAX_VALUE)
                            .addComponent(warn_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtf_user_id, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(txtf_login_password)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comb_usrtype, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warn_message)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtf_user_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtf_login_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_login)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(469, 371));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed

         login_password = String.valueOf(txtf_login_password.getPassword());
         user_practice_number = txtf_user_id.getText();
        
        //atleast one charactor must be entered for both password and 
        // user id
        if(user_practice_number.equals(""))
         {
             warn_message.setText("please enter your user email");
             return;
         }


         if(login_password.equals(""))
         {
             warn_message.setText("please enter your password");           
             return;
         }

             
         
         
         
        if(comb_usrtype.getSelectedItem() == "usertype")
        {
            warn_message.setText("please select usertype"); 
            return;
        }
        else if(comb_usrtype.getSelectedItem() == "Doctor")
        {
                //execute only if the input from th user
                //exist in database
                 if(validate_usertype("Doctor") && usertype_fullname("Doctor"))
                 {
                    fullname = name+" "+lastname; 
                    new DoctorHome(fullname).setVisible(true);
                    this.setVisible(false);
                 }
                 else
                 {
                    login_error_message();
                 } 
        }
        else if(comb_usrtype.getSelectedItem() == "Patient")
        {
                //execute only if the input from th user
                //exist in database
                 if(validate_usertype("Patient") && usertype_fullname("Patient"))
                 {
                    fullname = name+" "+lastname;
                    new PatientHomeScreen(fullname).setVisible(true);
                    this.setVisible(false);
                 }
                 else
                 {
                    login_error_message();
                 }
        }
        else if(comb_usrtype.getSelectedItem() == "Receptionist")
        {
            //execute only if the input from th user
            //exist in database
             if(validate_usertype("Receptionist") && usertype_fullname("Receptionist"))
             {               
                fullname = name+" "+lastname;
                new ReceptionistHome(fullname).setVisible(true);
                this.setVisible(false);
             }
             else
             {
                login_error_message();
             }    
        }
       
        
    }//GEN-LAST:event_btn_loginActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        
       
       if(comb_usrtype.getSelectedItem() == "usertype")
        {
            warn_message.setText("please select usertype"); 
            return;
        }
        else if(comb_usrtype.getSelectedItem() == "Doctor")
        {
            new Doctor("").setVisible(true);
            this.setVisible(false);
        }
        else if(comb_usrtype.getSelectedItem() == "Patient")
        {
            new Patient().setVisible(true);
            this.setVisible(false);
        }
        else if(comb_usrtype.getSelectedItem() == "Receptionist")
        {
            new Receptionist().setVisible(true);
            this.setVisible(false);
        }        
    }//GEN-LAST:event_jLabel3MouseClicked
    
    
    public boolean validate_usertype(String usertype)
    {
        PreparedStatement ps;
        ResultSet rs;
        boolean correctness = false;
        
        String quiry =  choose_statement(usertype);
        
        try
        {
            ps = Connect2database.getConnection().prepareStatement(quiry);

            ps.setString(1, user_practice_number);
            ps.setString(2, login_password);

            rs = ps.executeQuery();
            
            if(rs.next())
            {
                correctness = true;
            }

            if(ps.executeUpdate()>0)
            {
                JOptionPane.showMessageDialog(null, "login was successfully");
            }
        }
        catch(SQLException sq)
        {
            sq.getSQLState();
        }

        
        return correctness;
    }
    
    public String choose_statement(String quiry)
    {
        switch (quiry) {
            case "Patient":
                quiry = "select* from PATIENT where EMAIL=? AND PASSWORD=?";
                break;
            case "Doctor":
                quiry = "select* from DOCTOR where PRACTICE_NUMBER=? AND PASSWORD=?";
                break;
            case "Receptionist":
                quiry = "select* from RECEPTIONIST where EMAIL=? AND PASSWORD=?";
                break;
            default:
                JOptionPane.showMessageDialog(null, "please contact the Administrator");
                break;
        }
        
        return quiry;
    }

    
     public boolean usertype_fullname(String user)
    {
        PreparedStatement ps;
        ResultSet rs;
        boolean correctness = false;
        
        String quiry = quiry_statement(user);
        
        try
        {
            ps = Connect2database.getConnection().prepareStatement(quiry);

            ps.setString(1, user_practice_number);

            rs = ps.executeQuery();
            
            if(rs.next())
            {
                name = rs.getString("NAME");
                lastname = rs.getString("SURNAME");
                correctness = true;
            }
        }
        catch(SQLException sq)
        {
            sq.getSQLState();
        }

        
        return correctness;
    }
     //end receptionionist_name() function
    
     
     
    public String quiry_statement(String statement)
    {
        switch (statement) {
            case "Doctor":
                statement = "select NAME, SURNAME from DOCTOR where PRACTICE_NUMBER=?";
                break;
            case "Patient":
                statement = "select NAME, SURNAME from PATIENT where EMAIL=?";
                break;
            case "Receptionist":
                statement = "select NAME, SURNAME from RECEPTIONIST where EMAIL=?";
                break;
            default:
                JOptionPane.showMessageDialog(null, "Please contact the Administrator");
                break;
        }
        
        return statement;
    }
     
    //login erro message
    public void login_error_message()
    {
        txtf_user_id.setText("");
        txtf_login_password.setText("");
        warn_message.setText("incorrect userid or password");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JComboBox<String> comb_usrtype;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField txtf_login_password;
    private javax.swing.JTextField txtf_user_id;
    private javax.swing.JLabel warn_message;
    // End of variables declaration//GEN-END:variables
}
