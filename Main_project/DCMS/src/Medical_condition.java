
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author tholithemba
 */
public class Medical_condition extends javax.swing.JFrame {

    
    private static String heart_condition;
    private static String epilepsy;
    private static String allergies;
    private static String dental_sedation;
    private static String bleeding_disorder;
    private static String teeth_sensitive;
    private static String medication;
    private static String sores_in_mouth;
    private static String toung_diagnosis;
    private static String hiv_aids;
    private static String medical_aid_name;
    private static int medical_aid_number;
    private static String fam_dr_name;
    private static String fam_dr_contact;
    
    /**
     * Creates new form Medical_condition
     */
    public Medical_condition() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        
        
        medical_condition();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medical_condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medical_condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medical_condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medical_condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medical_condition().setVisible(true);
            }
        });
    }

    
    public static void medical_condition()
    {
        heart_condition = "heart valve";
        epilepsy = "myoclonic seizures";
        allergies = "peanuts";
        dental_sedation = "Oral sedation";
        bleeding_disorder = "Von Willebrand's disease";
        teeth_sensitive = "Gum recession";
        medication = "acetaminophen (Tylenol)";
        sores_in_mouth = "Herpes simplex";
        toung_diagnosis = "tongue problems ";
        hiv_aids = "Positive";
        medical_aid_name = "Bonitas";
        medical_aid_number = 24509;
        fam_dr_name = "John";
        fam_dr_contact = "072 451 6321";
        
        PreparedStatement ps;
        String insert_query =
                "INSERT INTO `MEDICAL_CONDTION`(`HEART_CONDITION`, `EPILEPSY`, `ALLERGIES`, "
                + "`DENTAL_SEDATION`, `BLEEDING_DISORDER`, `TEETH_SENSITIVE`, `MEDICATION`, "
                + "`SORES_IN_MOUTH`, `TOUNGE_DIAGNOSIS`, `HIV_AIDS`, `MEDICAL_AID_NAME`, `MEDICAL_AID_NUMBER`, "
                + "`FAMILY_DR_NAME`, `FAMILY_DR_CONTACT`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
   
        try{
            
            ps = Connect2database.getConnection().prepareStatement(insert_query);
            
            ps.setString(1, heart_condition);
            ps.setString(2, epilepsy);
            ps.setString(3, allergies);
            ps.setString(4, dental_sedation);
            ps.setString(5, bleeding_disorder);
            ps.setString(6, teeth_sensitive);
            ps.setString(7, medication);
            ps.setString(8, sores_in_mouth);
            ps.setString(9,toung_diagnosis);
            ps.setString(10, hiv_aids);
            ps.setString(11, medical_aid_name);
            ps.setInt(12, medical_aid_number);
            ps.setString(13, fam_dr_name);
            ps.setString(14, fam_dr_contact);
            
            
            if(ps.executeUpdate()>0)
            {
                JOptionPane.showMessageDialog(null, "data captured successfully");
            }
            
            
        }catch(SQLException sq)
        {
            sq.getSQLState();
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
